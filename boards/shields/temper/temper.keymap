/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/pointing.h>

#define DEFAULT 0
#define NUM 1
#define SYM 2
#define FUNC 3
#define HYPR 4

#define ______ &trans
#define HYPR(key) &kp LG(LC(LA(LS(key))))

&mt {
  tapping-term-ms = <200>;
  flavor = "tap-preferred";
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <NUM SYM>;
            then-layer = <FUNC>;
        };
    };
    behaviors {

        // Home row mods
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&hm RGUI SEMI>, <&kp SQT>;
        };

        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mt LCTRL TAB>, <&kp ESC>;
        }; 
    };
    
    /*                KEY POSITIONS
     ╭────────────────────╮ ╭────────────────────╮
     │  0   1   2   3   4 │ │  5   6   7   8   9 │
     │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
     │ 20  21  22  23  24 │ │ 25  26  27  28  29 │
     ╰───────╮ 30  31  32 │ │ 33  33  34╭────────╯
             ╰────────────╯ ╰───────────╯            */
    
    combos {
        compatible = "zmk,combos";
        combo_vimwq {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&vim_quit>;
        };
        combo_hypr {
            timeout-ms = <50>;
            key-positions = <32 33>;
            layers = <DEFAULT>;
            bindings = <&mo HYPR>;
        };
        caps {
            timeout-ms = <50>;
            key-positions = <14 15>;
            layers = <DEFAULT>;
            bindings = <&kp CAPS>;
        };
     };

    macros {
        vim_quit: vim_quit {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp ESC &kp COLON &kp W &kp Q>;

        };
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
        &kp Q         &kp W         &kp E         &kp R         &kp T             &kp Y         &kp U         &kp I         &kp O       &kp P   
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
        &kp A       &hm LALT S   &hm LCTRL D     &hm LSHFT F    &kp G             &kp H       &hm RSHFT J   &hm RCTRL K   &hm RALT L    &td0
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
        &kp Z         &kp X         &kp C         &kp V         &kp B             &kp N         &kp M         &kp COMMA     &kp DOT     &kp FSLH
// ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────╯
                                    &td1       &lt NUM BSPC  &mt LGUI ENTER   &mt RCTRL SPACE &lt SYM DEL  &mt LCTRL GRAVE
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
                        >;
                };
                num_layer {
                        bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
        &kp TAB       &kp N1        &kp N2        &kp N3        &kp N4           &kp PLUS       &kp N7        &kp N8       &kp N9       &kp STAR  
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
       &kp ESC        &kp Q         &kp W         &kp E         &kp R            &kp MINUS      &kp N4        &kp N5       &kp N6       &kp SLASH
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
       &kp LSHFT      &kp A         &kp S         &kp D         &kp F            &kp N0         &kp N1        &kp N2       &kp N3       &kp EQUAL
// ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────╯
                                    &kp ESC     &kp LCTRL     &kp SPACE          &kp DOT        &mo FUNC      &kp RALT
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
                        >;
                };
                sym_layer {
                        bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
      &kp TILDE       &kp AT       &kp LBRC      &kp RBRC     &kp PRCNT         &kp STAR        &kp N7       &kp N8       &kp N9        &kp MINUS
// ├─────────────┼─────────────┼─────────────┼─────────────┼────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
      &kp CARET      &kp HASH      &kp LPAR      &kp RPAR      &kp DLLR         &kp UNDER       &kp N4       &kp N5       &kp N6        &kp PLUS
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
      &kp ESC     &kp LT       &kp LBKT      &kp RBKT       &kp GT          &kp N0          &kp N1       &kp N2       &kp N3        &kp EQUAL
// ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────╯
                                  &kp LC(C)      &kp EXCL      &kp N0            ______        ______        ______
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
                        >;
                };

                func_layer {
                        bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
       &kp F11       &kp F12       &none         &bootloader   &sys_reset       &sys_reset    &bootloader   &none         &none         &none
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
       &kp F10       &kp F9        &kp F8        &kp F7        &kp F6           &none         &none         &none         &none         &none
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
       &kp F5        &kp F4        &kp F3        &kp F2        &kp F1           &none         &none         &none         &none         &none
// ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────╯
                                   ______        ______        ______            ______        ______        ______
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
                        >;
                };

                hypr_layer {
                        bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
       HYPR(Q)       HYPR(W)        HYPR(E)      HYPR(R)       HYPR(T)           HYPR(Y)       HYPR(U)       HYPR(I)       HYPR(O)      HYPR(P)
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
       HYPR(A)       HYPR(S)        HYPR(D)      HYPR(F)       HYPR(G)           HYPR(H)       HYPR(J)       HYPR(K)       HYPR(L)      &none
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
       &none         &none          HYPR(C)      HYPR(V)       HYPR(B)           HYPR(N)       HYPR(M)       &none         &none        &none
// ╰─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────╯
                                    ______        ______        ______            ______        ______        ______
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
                        >;
                };
        };
};
